{"version":3,"sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA,uEAAuE;;AAEvE;;AAEA,sCAAsC;AACtC;AACA,KAAK;AACL,uBAAuB;AACvB,8CAA8C;AAC9C;;AAEA,wCAAwC;AACxC;AACA,KAAK;AACL,sBAAsB;AACtB,6CAA6C;AAC7C;;AAEA,uDAAuD;AACvD;AACA,kCAAkC;AAClC,+CAA+C;AAC/C,0EAA0E;AAC1E,gDAAgD;AAChD;AACA,oFAAoF;AACpF,gDAAgD;AAChD;AACA,SAAS;AACT;;AAEA,wEAAwE;AACxE;;AAEA,0BAA0B;AAC1B,4DAA4D;AAC5D;AACA,mBAAmB;AACnB;;AAEA,+BAA+B;AAC/B;;AAEA,SAAS,OAAO;;AAEhB;AACA;;;AAGA,K;AACA,gBAAgB;;AAEhB,2DAA2D;AAC3D,6DAA6D;;AAE7D,kCAAkC;AAClC,mDAAmD;AACnD,0DAA0D;AAC1D,iEAAiE;AACjE,wFAAwF;;AAExF,iBAAiB,OAAO;AACxB,uDAAuD;AACvD,8EAA8E;AAC9E;;;;AAIA,0CAA0C;AAC1C,uDAAuD;;AAEvD,iBAAiB;AACjB,oDAAoD;;AAEpD,4BAA4B;;AAE5B,aAAa;AACb,SAAS;;;AAGT;;AAEA,2EAA2E;AAC3E,4FAA4F;;AAE5F,8CAA8C;AAC9C;;AAEA,+CAA+C;;AAE/C,0CAA0C;AAC1C,qDAAqD;AACrD,aAAa;AACb,4CAA4C;AAC5C;;AAEA,8CAA8C;AAC9C;AACA,0CAA0C;AAC1C,0B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,uCAAuC;AACvC;AACA;AACA,wBAAwB;;AAExB,SAAS;;AAET;AACA,qCAAqC;AACrC;AACA;;AAEA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;ACvH8B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,2BAA2B,SAAS,OAAO,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;;;AAIA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS;AACT;;;AAGA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;ACtD0B;AACA;;AAE9C;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA,IAAI,iDAAS;;AAEb;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAU;AAClB,KAAK;;AAEL;;AAEA;;AAEA,GAAG,iEAAe,KAAK,E;;;;;;;;;;;;;;;;AC1EvB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA,gC;AACA;AACA,sCAAsC;AACtC,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK,E;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA,iEAAe,KAAK,EAAC;;AAED;;;;;;;;;;;;;;;;AClFpB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE,uBAAuB;AACvB,mBAAmB;AACnB,6BAA6B;AAC7B;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B,4D;AACA;AACA,K;;AAEA,6BAA6B;AAC7B,gCAAgC,cAAc,EAAE;AAChD,kCAAkC,WAAW,EAAE;AAC/C,KAAK,OAAO;AACZ,0CAA0C;AAC1C,yCAAyC;AACzC;;AAEA,wDAAwD;AACxD,uCAAuC;AACvC,8CAA8C;;AAE9C,4CAA4C;;AAE5C,6BAA6B;AAC7B,kCAAkC;;AAElC,KAAK;;AAEL,uCAAuC;;AAEvC;AACA,0BAA0B;AAC1B,8CAA8C;AAC9C;AACA,uB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN,wBAAwB;;AAExB,mBAAmB,mBAAmB,QAAQ;AAC9C,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,mBAAmB;AACnB,kCAAkC;;AAElC;;AAEA,yBAAyB;AACzB,6BAA6B;AAC7B;;AAEA,0CAA0C;AAC1C,2DAA2D;AAC3D,uBAAuB;AACvB,SAAS;AACT,mCAAmC;AACnC;AACA,qDAAqD,OAAO,KAAK;;AAEjE,0CAA0C;AAC1C,2BAA2B;AAC3B,SAAS;AACT,yBAAyB;AACzB;AACA,sBAAsB;AACtB,sBAAsB;AACtB,SAAS;;AAET,8CAA8C;AAC9C,0BAA0B;AAC1B;AACA,SAAS,OAAO;AAChB,mCAAmC;AACnC;AACA,qDAAqD,OAAO,KAAK;;AAEjE,8BAA8B;AAC9B,uCAAuC;AACvC,SAAS;AACT,yBAAyB;AACzB;AACA,sBAAsB;AACtB,sBAAsB;AACtB,SAAS;;AAET,mCAAmC;AACnC,kDAAkD;AAClD;AACA,qCAAqC;AACrC;AACA,6DAA6D,OAAO,KAAK;;AAEzE,8BAA8B;AAC9B,8BAA8B;AAC9B,aAAa;;;AAGb,SAAS;AACT;;;AAGA,iEAAe,MAAM,E;;;;;;;;;;;;;;AClJrB,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,KAAK;AACL;;;AAGA,iEAAe,IAAI,E;;;;;;;;;;;;;;ACzCnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,iEAAe,KAAK,E;;;;;;;;;;;;;;;ACzDpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C,IAAI,eAAe,WAAW;AAC3E;;;AAGA;AACA;;AAEkB;;;;;;;UCvBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACA;AACE;AACJ;AACQ;;AAE1C;AACA,0CAA0C,yDAAS;;AAEnD,IAAI,sDAAI;AACR,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,KAAK;AACL,IAAI,sDAAI;;AAER,CAAC","file":"bundle.js","sourcesContent":["function calc() {\r\n    const result = document.querySelector('.calculating__result span'); // записали результат калькулятора, обращаю внимание что в селекьторы записан не только класс но и спан (там два спана, но выберется первый спан, который отвечает за число)\r\n\r\n    let sex, height, weight, age, ratio // просто создали переменные которые отвечают за пол, рост, вес, возраст, и ратио (активность)\r\n\r\n    if (localStorage.getItem('sex')) { // играемся с локалсторожем, если в стороже сохранён какой то пол, то\r\n        sex = localStorage.getItem('sex') // в калькуляторе присваивается этот пол\r\n    } else {\r\n        sex = 'female'; // если в стороже нету пола то по умолчанию своит \"женщина\"\r\n        localStorage.setItem('sex', 'female'); // и в сторож тоже записывается женщина\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) { // та же фигня что и сверху только для ратио\r\n        ratio = localStorage.getItem('ratio') // та же фигня что и сверху только для ратио\r\n    } else {\r\n        ratio = 1.375; // та же фигня что и сверху только для ратио\r\n        localStorage.setItem('ratio', 1.375); // та же фигня что и сверху только для ратио\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) { // вобщем, так как при обновлении сайта значения пола и ратио не стоят по умолчанию, для исправления данного бага мы создадим новую функцию\r\n        const elements = document.querySelectorAll(selector) // тупо выбрали все статичные элементы\r\n        elements.forEach(elem => { // смысл данной функции в том чтобы сначала удалить у всех статичных элементов класс активности а потом повесить класс той кнопке, которая сохранилась в локал стороже\r\n            elem.classList.remove(activeClass); // тут удаляется активный класс\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) { // если в локал стороже есть значение пола которое совпадает с названием пола на кнопках (то есть, если в локал стороже есть какой то пол)\r\n                elem.classList.add(activeClass); // то на эту кнопку вешается класс активности\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // то же самое с дата ратио\r\n                elem.classList.add(activeClass); // то же самое\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active'); // просто вызываем функцию с локал сторожем для статики и для динамики\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() { // создаём функцию для вычисления ккал\r\n        if (!sex || !height || !weight || !age || !ratio ) { // но начинаем мы её с проверки, если хоть какого-то значения нет или его не ввели (оператор ! означает отрицание)\r\n            result.textContent = \"____\" // то результат не будет выводится\r\n            return; // прерывание функции, она остановится здесь\r\n        }\r\n\r\n        if (sex === 'female') { //если выбран пол \"женщина\"\r\n            result.textContent = Math.round(447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age) * ratio) // ну тут взята формула из сайта по расчёту нормы ккал и умноженая на ратио, то есть активность, добавили Math.round стобы калькулятор выдавал целые значения\r\n\r\n        } else { // но если \"пол\" выбран \"мужчина\", то...\r\n\r\n            result.textContent = Math.round(88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age) * ratio) // тут формула расчёта для мужчин, добавили Math.round стобы калькулятор выдавал целые значения\r\n        }\r\n\r\n        \r\n    }    \r\n    calcTotal(); // вызываем функцию сверху, обрати внимание что мы должны тсавить эту функцию в конце функции по заданию статических и динамических данных калькулятора, снизу больше инфы\r\n\r\n    function getStaticInformation (selector, activeClass) { // создаём функцию для получения статической инфы (это та инфа которая не меняется но которую можно выбрать переключателями, т.е. пол и ратио), записали в перменные родителя и активный класс (нет такого метода вызова как parentSelector, не путайся!!! в перменные можно записывать что угодно лишь бы тебе удобно было)\r\n        const elements = document.querySelectorAll(selector); // слушай сюда, мы просто в элементы записали ВСЕХ родителей дива, если посмотреть вёрстку то там есть айди и после него идёт див, то есть сюда записываются все айди и метки которые мы ставили, то есть все ратио и пол мужчина / женщина.\r\n\r\n        elements.forEach(elem => { // прописываем каждому родителю \r\n            elem.addEventListener('click', (e) => { // просто вешаем на какого то родителя клик, обрати внимание как вызывается родитель, и мы также повесили само событие 'e'\r\n                if (e.target.getAttribute('data-ratio')) { // вобщем суть в том что тут мы пишем функцию для двух типов кнопок, если под таргетом мыши есть аттрибут ОТ дата-ратио (то есть если мы кликнули на любое ратио)\r\n                    ratio = +e.target.getAttribute('data-ratio'); // то ратио будет равно атрибуту от дата-ратио (они там равны 1.2, 1.375 итд) и потом оно идёт в формулу\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); // чтобы инфа. которую забивает пользователь в калькулятор сохранялась, мы в локалсторож будем помещать значение ратио и пола ниже\r\n    \r\n                } else { // НО если мы кликнули на пол мужчина или женщина то\r\n                     sex = e.target.getAttribute('id'); // в форумулу пойдёт айди под мышкой, а это либо male либо female\r\n                     localStorage.setItem('sex', e.target.getAttribute('id')); // записываем в локалсторож пол\r\n                }\r\n    \r\n    \r\n    \r\n                elements.forEach(elem => { // дальше мы прописываем для всех статичных элементов в калькуляторе функцию forEach...\r\n                    elem.classList.remove(activeClass); // которая убирает у всех элементов класс активации (подсвечивает их)\r\n                    \r\n                });\r\n                e.target.classList.add(activeClass); // и после этого когда класс активации пропал у всех кнопок мы добавляем класс активации именно той кнопке на которую кликаем.\r\n    \r\n                calcTotal(); // дело в том что мы должны пересчитывать итоговое значение после каждого действия пользователя, поэтому это не последний раз когда мы видим эту функцию\r\n    \r\n            })\r\n        })\r\n\r\n       \r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active'); // вызываем прописанную функцию сначала для гендера, в скобках указываем айди гендерного блока, а потом класс активации кнопки (подсветки)\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // вызываем функцию для ратио и активируем кнопку\r\n\r\n    function getDynamicInformation(selector) { // ага, это функция для получения инпутов в калькуляторе, причём для любого из трёх.\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => { // вешаем обработчик событий \"пользователь чото вводит\" на окно ввода данных\r\n\r\n            if(input.value.match(/\\D/g)) { // мы хотим сказать пользователю что он ввёл неверные данные, поэтому если в инпуте у нас введены НЕ ЧИСЛА (/\\D/), то\r\n                input.style.border = '1px solid red'; // ну например пусть граница у инпута окрасится в красный цвет\r\n            } else {\r\n                input.style.border = 'none'; // ну а если введены числа то ничего не происходит\r\n            }\r\n\r\n            switch(input.getAttribute('id')) { //функция свич, первый раз встречается в курсе, её смысл такой: она заменяет несколько if, а фраза брейк запускает проверку заново\r\n                case 'height': // если была запись в \"росте\"\r\n                    height = +input.value; // то в переменную \"рост\" в формуле записывается значение инпута\r\n                    break; \r\n                case 'weight': // то же с весом\r\n                    weight = +input.value; // то же с весом\r\n                    break;\r\n                case 'age': //то же с возрастом\r\n                    age = +input.value; // то же с возрастом\r\n                    break;\r\n            }\r\n            calcTotal(); // это последний раз когда мы пересчитываем итоговое значение калькулятора, благодаря пересчёту калькулятор меняется динамически при изменении инпута\r\n\r\n        })\r\n        \r\n    }\r\n    getDynamicInformation('#height'); // просто вызывает функцию три раза с тремя разными переменными\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.chanceToUAH();\r\n        }\r\n\r\n        chanceToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) {\r\n                this.classes = \"menu__item\";\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n}\r\n\r\n\r\nexport default cards;","import {modalClose, modalOpen} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    const forms = document.querySelectorAll(formSelector);\r\n          \r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся!',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\r\n            const formData = new FormData(form);\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n   function showThanksModal(message) {\r\n    const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n    prevModalDialog.classList.add('hide');\r\n    modalOpen('.modal', modalTimerId);\r\n\r\n    const thanksModal = document.createElement('div');\r\n    thanksModal.classList.add('modal__dialog');\r\n    thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class=\"modal__close\" data-close>×</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n        </div>\r\n    `;\r\n    document.querySelector('.modal').append(thanksModal);\r\n    setTimeout(() => {\r\n        thanksModal.remove();\r\n        prevModalDialog.classList.add('show');\r\n        prevModalDialog.classList.remove('hide');\r\n        modalClose('.modal');\r\n    }, 4000);\r\n\r\n}\r\n\r\n}\r\n\r\n   export default forms;","function modalClose(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    // modal.classList.toggle('show');\r\n    document.body.style.overflow = ''; // Да да да тут пустые кавычки.\r\n};\r\n    \r\nfunction modalOpen(modalSelector, modalTimerId  ) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show'); \r\n    modal.classList.remove('hide');\r\n    // modal.classList.toggle('show'); // Есть вариант с тогглом.\r\n    document.body.style.overflow = 'hidden'; // На сайте текст не скролится когда открыто окно.\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);\r\n    }\r\n    \r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n            modal = document.querySelector(modalSelector);\r\n\r\n\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', () => modalOpen(modalSelector, modalTimerId));\r\n    });\r\n\r\n    \r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if(e.target === modal || e.target.getAttribute('data-close') == \"\") {\r\n            modalClose(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            modalClose(modalSelector);\r\n        }\r\n    }); \r\n\r\n    function showModalByScroll() {\r\n        if (Math.ceil(window.pageYOffset) + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            modalOpen(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n    \r\n        prevModalDialog.classList.add('hide');\r\n        modalOpen(modalSelector);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            modalClose(modalSelector);\r\n        }, 4000);\r\n    }\r\n}\r\n\r\n\r\nexport default modal;\r\n\r\nexport {modalClose};\r\n\r\nexport {modalOpen};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n    const slides = document.querySelectorAll(slide), // в переменную запихиваем все 4 слайда\r\n             slider = document.querySelector(container), // тут мы запихнули слайдер\r\n             next = document.querySelector(nextArrow), // кнопка \"следующий слайд\"\r\n             prev = document.querySelector(prevArrow), // кнопка \"предыдущий слайд\"\r\n             total = document.querySelector(totalCounter), // число которое показывает сколько всего слайдов (их 4 пока что)\r\n             current = document.querySelector(currentCounter), // число которое показывает на каком мы сейчас слайде находимся\r\n             slidesWrapper = document.querySelector(wrapper), // это враппер, на нём находятся все слайды, которые сшиты один за другим\r\n             slidesField = document.querySelector(field), // это окно через которое показываются слайды, одновременно показывается только один слайд\r\n             width = window.getComputedStyle(slidesWrapper).width; // ширина ВСЕХ слайдов, добытая при помощи getComputedStyle (данное св-во предоставляет доступ ко всем стилям на объекте враппер и свойство width добывает свойство ширины)\r\n\r\n    let slideIndex = 1; // пусть номер первого слайда всегда будет равен 1 \r\n    let offset = 0; // положение оффсета по умолчанию НОЛЬ\r\n    function currentZero () {          // я записал эти две функции чтобы сократить код, данная функция просто пришивает нуль спереди общему числу слайдов если их меньше 10 и не пришивает если больше 10\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function sliceWidth() {\r\n        return +width.match(/\\d/g).join('');\r\n    }\r\n\r\n    function dotsOpacity () { // функция для сокращения кода, добавляет всем точкам опасити 50% и дорбавляет точке на которой мы сейчас находимся опасити 100%\r\n        indicators.forEach(dot => dot.style.opacity = '.5'); \r\n        indicators[slideIndex - 1].style.opacity = 1;\r\n    }    \r\n\r\n    if (slides.length < 10) { // если количество всех слайдов меньше 10\r\n        total.textContent = `0${slides.length}`; // то к числу которое показывает сколько у нас всего слайдов мы пришьём спереди нуль\r\n        current.textContent = `0${slideIndex}`; // то же самое мы сделаем с числом которое показывает на каком мы слайде\r\n    } else { // но если слайдов больше 10 \r\n        total.textContent = slides.length; // то мы ничего не будем им пришивать спереди\r\n        current.textContent = slideIndex; // и тут тоже\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // здесь мы вычисляем ширину для поля показа окна, она равна 400% (100 * кол-во слайдов + %)\r\n    slidesField.style.display = 'flex'; // стилю дисплей придаём флекс (зачем?)\r\n    slidesField.style.transition = '0.5s all'; // это стиль транзишн, с его помощью происходит плавный переход от одного слайда к следующему\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; //так как у нас широкое поле мы прячем оверфлоу чтобы показывался одновременно только один слайд\r\n\r\n    slides.forEach(slide => { // в слайдах для каждого слайда \r\n        slide.style.width = width; //мы подгоняем все слайды под одну ширину (??? зачем я закомментил эьтот код и всё было хорошо, но слайды и так подобраны с одинаковой шириной, вобщем оставлю пока так) \r\n\r\n    });\r\n\r\n    slider.style.position = 'relative'; // позиция слайдера относительная\r\n\r\n    const dots = document.createElement('ol'), // создаём упорядоченный список (organized list) и запихиваем в dots (у Ивана был indicators)\r\n          indicators = []; // просто присваиваем массив к переменной indicators (у ивана был dots)\r\n    dots.classList.add('carousel-indicators'); // не знаю зачем но прикрутили всем точкам для слайдов класс карусель-индикаторс\r\n    dots.style.cssText = ` \r\n    position: absolute; \r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 15;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-right: 15%;\r\n    margin-left: 15%;\r\n    list-style: none;\r\n    `; // пишем цсс текст со стилями расположения ко всем точкам, их взяли из файла к уроку \r\n\r\n    slider.append(dots); // добавляем к слайдеру точки\r\n\r\n    for (let i = 0; i < slides.length; i++ ) { // короче данная функция будет создавать столько объектов сколько запишешь в slides.length (пока что 4)\r\n        const dot = document.createElement('li'); // создаётся 4 пункта для списка (это будут точки на слайдере) \r\n        dot.setAttribute('data-slide-to', i + 1) // тут мы просто кажой точке присвоили атрибут data-slide-to и пронумеровали их от 1 до 4 (потому что i для первого слайда будет равен нулю лул)\r\n        dot.style.cssText = `\r\n        box-sizing: content-box;\r\n        flex: 0 1 auto;\r\n        width: 30px;\r\n        height: 6px;\r\n        margin-right: 3px;\r\n        margin-left: 3px;\r\n        cursor: pointer;\r\n        background-color: #fff;\r\n        background-clip: padding-box;\r\n        border-top: 10px solid transparent;\r\n        border-bottom: 10px solid transparent;\r\n        opacity: .5;\r\n        transition: opacity .6s ease;\r\n        `; // пишем стили для каждой точки\r\n        if (i==0) { // если мы находимся на первом слайде то точка\r\n            dot.style.opacity = 1; // становится белее (первая точка)\r\n\r\n        }\r\n\r\n        dots.append(dot); // добавляем к списку ol пункты li (то есть добавляем к расположению точке сами точки)\r\n        indicators.push(dot); // запушим в массив все пункты li (все 4 точки)\r\n    }\r\n\r\n    next.addEventListener('click', () => { //КНОПКА ВЕРЁД мы на неё кликаем и что то происходит\r\n        if (offset == sliceWidth() * (slides.length - 1)) { //короче тут сложное вычисление нашего текущего положения на слайдере: плюс делает наш объект числом, слайс вырезает из строки символы - нуль это начало, width.length это ширина в пикселях и мы две буквы px вырезаем при помощи -2\r\n            offset = 0; // короче, если мы находились в конце слайдо шоу то мы вернёмся в начало \r\n        } else {\r\n            offset += sliceWidth(); // если мы не в конце мы пролистнём слайд вперёд\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // тут всему филду присваивается класс стиля трансформ \r\n\r\n        if (slideIndex == slides.length) { // если мы находимся в конце слайдера, то\r\n            slideIndex = 1; // если нажмём кнопку \"вперёд\" мы переместимся в начало слайдера\r\n        } else {\r\n            slideIndex++; // но если мы не находимся в конце слайдера мы просто переместимся на один слайд вперёд\r\n        }\r\n        currentZero(); // эти две функции я прописал в самом начале этого блока. эта функция пришивает или не пришивает нуль перед числом, которое показывает наше текущее местоположение\r\n        dotsOpacity(); // а эта функция прописывает опасити точкам (видимость), она присваивает 50% опасити всем точкам и 100% опасити точке на которой мы сейчас находимся\r\n        })\r\n\r\n        prev.addEventListener('click', () => {  //КНОПКА НАЗАД\r\n        if (offset == 0) {                  //ЕСЛИ МЫ НАХОДИМСЯ В НАЧАЛЕ СЛАЙДШОУ\r\n            offset = sliceWidth() * (slides.length - 1) //ТО ПРИ НАЖАТИИ КНОПКИ НАЗАД МЫ ПЕРЕМЕСТИМСЯ НП ПОСЛЕДНИЙ СЛАЙД \r\n        } else { // ИНАЧЕ\r\n            offset -= sliceWidth(); // МЫ ПРОСТО ПЕРЕМЕСТИМСЯ НА ПРЕДЫДУЩИЙ СЛАЙД\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // присваиваем всем слайдам css стиль трансформ и прописываем на сколько px он будет перемещаться при каждом нажатии кнопки\r\n\r\n        if (slideIndex == 1) { // если при перемещении НАЗАД мы находимся на первой странице, то \r\n            slideIndex = slides.length; // мы уходим на последний слайд ( то есть возврат с 1го на 4й)\r\n        } else {\r\n            slideIndex--; // ну а если мы не на первом слайде то мы от числа слайдИндекс отнимаем 1\r\n        }\r\n        currentZero(); // просто функция которая пришивает нуль перед числом, я уже её описывал выше\r\n        dotsOpacity(); // просто функция, которая задаёт опасити точкам и точке на которой мы сейчас находимся, описывал её выше\r\n        })\r\n\r\n        indicators.forEach(dot => { // каждой точке в массиве\r\n            dot.addEventListener('click', (e) => { //вешаем событие клик мышью\r\n                const slideTo = e.target.getAttribute('data-slide-to') // тут мы получаем id от той точки на которую кликнули\r\n                slideIndex = slideTo; // присваиваем числу которое будет показывать на каком мы слайде id точки на которую кликнули\r\n                offset = sliceWidth() * (slideTo - 1) // выставляем положение слайдера в то место куда надо \r\n                slidesField.style.transform = `translateX(-${offset}px)`; // плавно пересещаем слайдер при помощи стиля трансформ\r\n\r\n                currentZero(); // использовал функцию которая пришивает ноль перед числом\r\n                dotsOpacity(); // опять та же функция про опасити\r\n            })\r\n\r\n\r\n        });\r\n}\r\n\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) { // когда нибудь я напишу что происходит в этом модуле Kappa\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n            tabsContent = document.querySelectorAll(tabsContentSelector),\r\n            tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(kusok => {\r\n            kusok.classList.add('hide');\r\n            kusok.classList.remove('show', 'fade');\r\n\r\n        });\r\n        tabs.forEach(kusok => {\r\n            kusok.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', function(event) {\r\n    const target = event.target;\r\n\r\n    if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n        tabs.forEach((kusok, i) => {\r\n            if (target == kusok) {\r\n                hideTabContent();\r\n                showTabContent(i);\r\n            }\r\n        });\r\n    }\r\n\r\n    });\r\n}\r\n\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n              days = Math.floor( (t / (1000 * 60 * 60 * 24)) ),\r\n              seconds = Math.floor((t / 1000) % 60),\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n              \r\n\r\n        return {\r\n            'total': t,\r\n            'days' : days,\r\n            'hours' : hours,\r\n            'minutes' : minutes,\r\n            'seconds' : seconds,\r\n        };         \r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >=0 && num <10) {\r\n            return `0${num}`;\r\n        } else {\r\n        return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n\r\n        function updateClock () {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <=0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\n\r\nexport default timer;","const postData = async (url, data) => {\r\n    let res = await  fetch(url, {\r\n        method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: data\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Не смог зафетчить ${url}, состояние: ${res.status}`);\r\n    }\r\n\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport calc from './modules/calc';\r\nimport {modalOpen} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const modalTimerId = setTimeout(() => modalOpen('.modal', modalTimerId), 50000);\r\n    \r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2021-12-12');\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner',\r\n\r\n\r\n    });\r\n    calc();\r\n\r\n});\r\n\r\n"],"sourceRoot":""}