function calc() {
    const result = document.querySelector('.calculating__result span'); // записали результат калькулятора, обращаю внимание что в селекьторы записан не только класс но и спан (там два спана, но выберется первый спан, который отвечает за число)

    let sex, height, weight, age, ratio // просто создали переменные которые отвечают за пол, рост, вес, возраст, и ратио (активность)

    if (localStorage.getItem('sex')) { // играемся с локалсторожем, если в стороже сохранён какой то пол, то
        sex = localStorage.getItem('sex') // в калькуляторе присваивается этот пол
    } else {
        sex = 'female'; // если в стороже нету пола то по умолчанию своит "женщина"
        localStorage.setItem('sex', 'female'); // и в сторож тоже записывается женщина
    }

    if (localStorage.getItem('ratio')) { // та же фигня что и сверху только для ратио
        ratio = localStorage.getItem('ratio') // та же фигня что и сверху только для ратио
    } else {
        ratio = 1.375; // та же фигня что и сверху только для ратио
        localStorage.setItem('ratio', 1.375); // та же фигня что и сверху только для ратио
    }

    function initLocalSettings(selector, activeClass) { // вобщем, так как при обновлении сайта значения пола и ратио не стоят по умолчанию, для исправления данного бага мы создадим новую функцию
        const elements = document.querySelectorAll(selector) // тупо выбрали все статичные элементы
        elements.forEach(elem => { // смысл данной функции в том чтобы сначала удалить у всех статичных элементов класс активности а потом повесить класс той кнопке, которая сохранилась в локал стороже
            elem.classList.remove(activeClass); // тут удаляется активный класс
            if (elem.getAttribute('id') === localStorage.getItem('sex')) { // если в локал стороже есть значение пола которое совпадает с названием пола на кнопках (то есть, если в локал стороже есть какой то пол)
                elem.classList.add(activeClass); // то на эту кнопку вешается класс активности
            }
            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // то же самое с дата ратио
                elem.classList.add(activeClass); // то же самое
            }
        });
    }

    initLocalSettings('#gender div', 'calculating__choose-item_active'); // просто вызываем функцию с локал сторожем для статики и для динамики
    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');

    function calcTotal() { // создаём функцию для вычисления ккал
        if (!sex || !height || !weight || !age || !ratio ) { // но начинаем мы её с проверки, если хоть какого-то значения нет или его не ввели (оператор ! означает отрицание)
            result.textContent = "____" // то результат не будет выводится
            return; // прерывание функции, она остановится здесь
        }

        if (sex === 'female') { //если выбран пол "женщина"
            result.textContent = Math.round(447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age) * ratio) // ну тут взята формула из сайта по расчёту нормы ккал и умноженая на ратио, то есть активность, добавили Math.round стобы калькулятор выдавал целые значения

        } else { // но если "пол" выбран "мужчина", то...

            result.textContent = Math.round(88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age) * ratio) // тут формула расчёта для мужчин, добавили Math.round стобы калькулятор выдавал целые значения
        }

        
    }    
    calcTotal(); // вызываем функцию сверху, обрати внимание что мы должны тсавить эту функцию в конце функции по заданию статических и динамических данных калькулятора, снизу больше инфы

    function getStaticInformation (selector, activeClass) { // создаём функцию для получения статической инфы (это та инфа которая не меняется но которую можно выбрать переключателями, т.е. пол и ратио), записали в перменные родителя и активный класс (нет такого метода вызова как parentSelector, не путайся!!! в перменные можно записывать что угодно лишь бы тебе удобно было)
        const elements = document.querySelectorAll(selector); // слушай сюда, мы просто в элементы записали ВСЕХ родителей дива, если посмотреть вёрстку то там есть айди и после него идёт див, то есть сюда записываются все айди и метки которые мы ставили, то есть все ратио и пол мужчина / женщина.

        elements.forEach(elem => { // прописываем каждому родителю 
            elem.addEventListener('click', (e) => { // просто вешаем на какого то родителя клик, обрати внимание как вызывается родитель, и мы также повесили само событие 'e'
                if (e.target.getAttribute('data-ratio')) { // вобщем суть в том что тут мы пишем функцию для двух типов кнопок, если под таргетом мыши есть аттрибут ОТ дата-ратио (то есть если мы кликнули на любое ратио)
                    ratio = +e.target.getAttribute('data-ratio'); // то ратио будет равно атрибуту от дата-ратио (они там равны 1.2, 1.375 итд) и потом оно идёт в формулу
                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); // чтобы инфа. которую забивает пользователь в калькулятор сохранялась, мы в локалсторож будем помещать значение ратио и пола ниже
    
                } else { // НО если мы кликнули на пол мужчина или женщина то
                     sex = e.target.getAttribute('id'); // в форумулу пойдёт айди под мышкой, а это либо male либо female
                     localStorage.setItem('sex', e.target.getAttribute('id')); // записываем в локалсторож пол
                }
    
    
    
                elements.forEach(elem => { // дальше мы прописываем для всех статичных элементов в калькуляторе функцию forEach...
                    elem.classList.remove(activeClass); // которая убирает у всех элементов класс активации (подсвечивает их)
                    
                });
                e.target.classList.add(activeClass); // и после этого когда класс активации пропал у всех кнопок мы добавляем класс активации именно той кнопке на которую кликаем.
    
                calcTotal(); // дело в том что мы должны пересчитывать итоговое значение после каждого действия пользователя, поэтому это не последний раз когда мы видим эту функцию
    
            })
        })

       
    }

    getStaticInformation('#gender div', 'calculating__choose-item_active'); // вызываем прописанную функцию сначала для гендера, в скобках указываем айди гендерного блока, а потом класс активации кнопки (подсветки)
    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // вызываем функцию для ратио и активируем кнопку

    function getDynamicInformation(selector) { // ага, это функция для получения инпутов в калькуляторе, причём для любого из трёх.
        const input = document.querySelector(selector);

        input.addEventListener('input', () => { // вешаем обработчик событий "пользователь чото вводит" на окно ввода данных

            if(input.value.match(/\D/g)) { // мы хотим сказать пользователю что он ввёл неверные данные, поэтому если в инпуте у нас введены НЕ ЧИСЛА (/\D/), то
                input.style.border = '1px solid red'; // ну например пусть граница у инпута окрасится в красный цвет
            } else {
                input.style.border = 'none'; // ну а если введены числа то ничего не происходит
            }

            switch(input.getAttribute('id')) { //функция свич, первый раз встречается в курсе, её смысл такой: она заменяет несколько if, а фраза брейк запускает проверку заново
                case 'height': // если была запись в "росте"
                    height = +input.value; // то в переменную "рост" в формуле записывается значение инпута
                    break; 
                case 'weight': // то же с весом
                    weight = +input.value; // то же с весом
                    break;
                case 'age': //то же с возрастом
                    age = +input.value; // то же с возрастом
                    break;
            }
            calcTotal(); // это последний раз когда мы пересчитываем итоговое значение калькулятора, благодаря пересчёту калькулятор меняется динамически при изменении инпута

        })
        
    }
    getDynamicInformation('#height'); // просто вызывает функцию три раза с тремя разными переменными
    getDynamicInformation('#weight');
    getDynamicInformation('#age');

}

export default calc;